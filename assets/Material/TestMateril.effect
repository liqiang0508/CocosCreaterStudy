// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.  

CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        texture: { value: white }
        alphaThreshold: { value: 0.5 }
        colorR: { value: 0.5 }
}%


CCProgram vs %{
  precision highp float;

  #include <cc-global>
  #include <cc-local>

  in vec3 a_position;
  in vec4 a_color;
  out vec4 v_color;

  #if USE_TEXTURE
  in vec2 a_uv0;
  out vec2 v_uv0;
  #endif

  void main () {
    vec4 pos = vec4(a_position, 1);

    #if CC_USE_MODEL
    pos = cc_matViewProj * cc_matWorld * pos;
    #else
    pos = cc_matViewProj * pos;
    #endif

    #if USE_TEXTURE
    v_uv0 = a_uv0;
    #endif

    v_color = a_color;

    gl_Position = pos;
  }
}%


CCProgram fs %{
  precision highp float;
  
  #include <alpha-test>
  #include <cc-global>
  #include <texture>

  uniform Props {
    float colorR;
  };
  // uniform float colorR;

  in vec4 v_color;
  #if USE_TEXTURE
  in vec2 v_uv0;
  uniform sampler2D texture;
  #endif

  void main () {
    vec4 o = vec4(1, 1, 1, 1);

    #if USE_TEXTURE
      CCTexture(texture, v_uv0, o);
    #endif

    o *= v_color;

    ALPHA_TEST(o);
    
    gl_FragColor = o;

    // // 圆角头像1
    // o.a = step(length(v_uv0 - vec2(0.5,0.5)), 0.1);
    // gl_FragColor = o;
   
    //圆角头像2
    // float s = distance(v_uv0,vec2(0.5,0.5));
    // if (s>0.5)
    // {
    //   o.a = 0.0;
    // }
    // gl_FragColor = o;

    // 圆角头像3
    // vec2 center = vec2(0.5,0.5);
    // float radius = 0.5;
    // float wh_ratio = 195.0/270.0;
    // float circle = radius * radius;
    // float rx = center.x * wh_ratio;
    // float ry = center.y ;
    // float dis = (v_uv0.x * wh_ratio - rx) * (v_uv0.x * wh_ratio - rx) + (v_uv0.y  - ry) * (v_uv0.y - ry);
    // o.a = step(dis, 0.1); //step(a, x) = x >= a? 1 : 0，
    // gl_FragColor = o;


     // 圆角头像4
    vec2 center = vec2(0.5,0.5);
    float radius = 0.4;
    float blur = 0.01;
    float wh_ratio = 195.0/270.0;
    float circle = radius * radius;
    float rx = center.x * wh_ratio;
    float ry = center.y ;
    float dis = (v_uv0.x * wh_ratio - rx) * (v_uv0.x * wh_ratio - rx) + (v_uv0.y  - ry) * (v_uv0.y - ry);
    o.a = smoothstep(circle, circle - blur, dis);//* o.a;
    gl_FragColor = o;

    

    gl_FragColor = vec4(abs(sin(cc_time.x)),o.g,o.b,o.a);

    // gl_FragColor = vec4(abs(sin(cc_time.x)),0.0,0.0,1.0);
    // gl_FragColor = vec4(colorR,0.0,0.0,1.0);

    // vec2 st = v_uv0.xy;
	  // gl_FragColor = vec4(st.x,st.y,0.0,1.0);
  }
}%



  


