import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'com.android.application'

android {
    signingConfigs {

        release {
            keyAlias 'fengtao'
            keyPassword '123456'
            storeFile file('keystore')
            storePassword '123456'
            v1SigningEnabled true
            v2SigningEnabled true

        }

        debug {
            keyAlias 'fengtao'
            keyPassword '123456'
            storeFile file('keystore')
            storePassword '123456'
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    compileSdkVersion PROP_COMPILE_SDK_VERSION.toInteger()
    buildToolsVersion PROP_BUILD_TOOLS_VERSION

    defaultConfig {
        applicationId "com.tao.honour"
        minSdkVersion PROP_MIN_SDK_VERSION
        targetSdkVersion PROP_TARGET_SDK_VERSION
        versionCode 140
        versionName "1.4.0"
        signingConfig signingConfigs.release

        externalNativeBuild {
            ndkBuild {
                if (!project.hasProperty("PROP_NDK_MODE") || PROP_NDK_MODE.compareTo('none') != 0) {
                    // skip the NDK Build step if PROP_NDK_MODE is none
                    targets 'cocos2djs'
                    arguments 'NDK_TOOLCHAIN_VERSION=clang'

                    def module_paths = [project.file("../../../cocos2d-x"),
                                        project.file("../../../cocos2d-x/cocos"),
                                        project.file("../../../cocos2d-x/external")]
                    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
                        arguments 'NDK_MODULE_PATH=' + module_paths.join(";")
                    }
                    else {
                        arguments 'NDK_MODULE_PATH=' + module_paths.join(':')
                    }
                    
                    arguments '-j' + Runtime.runtime.availableProcessors()
                }
            }
            ndk {
                abiFilters PROP_APP_ABI.split(':')
            }
        }
    }

    sourceSets.main {
        java.srcDirs "../src", "src"
        res.srcDirs "../res", 'res'
        jniLibs.srcDirs "../libs", 'libs'
        manifest.srcFile "AndroidManifest.xml"
    }

    externalNativeBuild {
        ndkBuild {
            if (!project.hasProperty("PROP_NDK_MODE") || PROP_NDK_MODE.compareTo('none') != 0) {
                // skip the NDK Build step if PROP_NDK_MODE is none
                path "jni/Android.mk"
            }
        }
    }


    buildTypes {
        release {
            signingConfig signingConfigs.release
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            if (project.hasProperty("RELEASE_STORE_FILE")) {
                signingConfig signingConfigs.release
            }
            externalNativeBuild {
                ndkBuild {
                    arguments 'NDK_DEBUG=0'
                }
            }
        }

        debug {
            signingConfig signingConfigs.debug
            debuggable true
            jniDebuggable true
            renderscriptDebuggable true
            externalNativeBuild {
                ndkBuild {
                    arguments 'NDK_DEBUG=1'
                }
            }

        }
    }
    ndkVersion '19.2.5345600'
    flavorDimensions "flavor"
    productFlavors {
        local{
            dimension "flavor"
            applicationId 'com.tao.honour_local'
            versionCode 142
            versionName "1.4.2"
            ext.APP_NAME = "cocos_local"
            ext.BUGLY_ID = "59fb8ee7bc"
            ext.BUGLY_KEY = "c42d2836-f704-4bc4-8ba0-792cea49a403"
            manifestPlaceholders = ["BUGLY_ID":ext.BUGLY_ID,
                                    "BUGLY_VERSION":versionName,
                                    "BUGLY_CHANNEL":"local",
                                    "BUGLY_DEBUG":"false",
                                    "APP_NAME":ext.APP_NAME,
                                    "GAME_CHANNEL":"4"
            ]
            signingConfig signingConfigs.release
        }
        pro {
            dimension "flavor"
            applicationId 'com.tao.honour'
            versionCode 142
            versionName "1.4.2"
            ext.APP_NAME = "cocos_pro"
            ext.BUGLY_ID = "59fb8ee7bc"
            ext.BUGLY_KEY = "c42d2836-f704-4bc4-8ba0-792cea49a403"
            manifestPlaceholders = ["BUGLY_ID": ext.BUGLY_ID,
                                    "BUGLY_VERSION":versionName,
                                    "BUGLY_CHANNEL":"pro",
                                    "BUGLY_DEBUG":"false",
                                    "APP_NAME":ext.APP_NAME,
                                    "GAME_CHANNEL":"3"
            ]
            signingConfig signingConfigs.release
        }
    }

    android.applicationVariants.all {
        variant ->
            variant.outputs.all {
                //在这里修改apk文件名
                outputFileName = "creater-${variant.name}-v${variant.versionName}(${variant.versionCode}).apk"
            }

    }
}

android.applicationVariants.all { variant ->
    // delete previous files first
    delete "${buildDir}/intermediates/merged_assets/${variant.dirName}"

    variant.mergeAssetsProvider.get().doLast {
        def sourceDir = "${buildDir}/../../../../.."

        copy {
            from "${sourceDir}"
            include "assets/**"
            include "src/**"
            include "jsb-adapter/**"
            into outputDir
        }

        copy {
            from "${sourceDir}/main.js"
            from "${sourceDir}/project.json"
            into outputDir
        }

        if(variant.name == "proRelease")
        {
            exec {
                def cmd = "java -jar buglyqq-upload-symbol.jar -appid " + variant.getProductFlavors().ext.BUGLY_ID[0] +
                        " -appkey " + variant.getProductFlavors().ext.BUGLY_KEY[0] + " -bundleid " + applicationId + " -version " + versionName +
                        " -platform Android -inputSymbol ${projectDir}/build/intermediates/ndkBuild/${variant.name}/obj/local"
                if (Os.isFamily(Os.FAMILY_WINDOWS)) {
                    commandLine 'cmd', '/c', cmd
                } else {
                    commandLine 'bash', '-c', cmd
                }
            }

        }
    }
}

dependencies {
    implementation fileTree(dir: '../libs', include: ['*.jar','*.aar'])
    implementation fileTree(dir: 'libs', include: ['*.jar','*.aar'])
    implementation fileTree(dir: "../../../cocos2d-x/cocos/platform/android/java/libs", include: ['*.jar'])
    implementation project(':libcocos2dx')
    implementation "androidx.core:core-ktx:1.7.0"
//    api 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:6.6.20'
    api 'com.tencent.mm.opensdk:wechat-sdk-android:+'
    implementation 'com.tencent.bugly:crashreport:latest.release'
}
